[{"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\index.js":"1","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\reportWebVitals.js":"2","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\App.js":"3","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\context.js":"4","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\dataFetch.js":"5","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Home.js":"6","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Movie.js":"7","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Search.js":"8","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Movies.js":"9","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Toogle.js":"10"},{"size":578,"mtime":1608747833434,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":421,"mtime":1608756258026,"results":"14","hashOfConfig":"12"},{"size":716,"mtime":1608750255975,"results":"15","hashOfConfig":"12"},{"size":843,"mtime":1608757388210,"results":"16","hashOfConfig":"12"},{"size":316,"mtime":1608756263261,"results":"17","hashOfConfig":"12"},{"size":1221,"mtime":1608757357310,"results":"18","hashOfConfig":"12"},{"size":605,"mtime":1608750848256,"results":"19","hashOfConfig":"12"},{"size":1302,"mtime":1608757371434,"results":"20","hashOfConfig":"12"},{"size":804,"mtime":1608756170812,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1397gg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\index.js",[],["48","49"],"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\reportWebVitals.js",[],"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\App.js",[],"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\context.js",[],"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\dataFetch.js",["50"],"import React, {useEffect, useState} from 'react'\r\nconst endpoint = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`\r\n\r\n\r\nconst useFetch = (urlParams) => {\r\nconst [loading, setLoading] = useState(true)\r\nconst [error, setError] = useState({show:false, msg:''})\r\nconst [data, setData] = useState(null)\r\n\r\nconst fetchMovies = async (url) => {\r\n    setLoading(true)\r\n    try{\r\nconst response = await fetch(url);\r\nconst data = await response.json();\r\n\r\nif(data.Response === 'True') {\r\n    setData(data.Search || data)\r\n    setError({show: false, msg:''})\r\n\r\n} else {\r\n    setError({show:true, msg:data.Error})\r\n}\r\nsetLoading(false)\r\n    } catch {\r\nconsole.log('error occured')\r\n    }\r\n\r\n}\r\n\r\nuseEffect(()=> {\r\nfetchMovies(`${endpoint}${urlParams}`)\r\n},[urlParams])\r\nreturn {loading, error, data}\r\n}\r\n\r\nexport default useFetch","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Home.js",[],"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Movie.js",["51","52","53"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport useFetch from './dataFetch'\r\nimport Toggle from './Toogle'\r\nfunction Movie() {\r\n    const {id} = useParams()\r\n    const {loading, error, data: movie} = useFetch(`&i=${id}`)\r\n    if(loading) {\r\n        return <div className=\"loading\">\r\n            <svg>\r\n                <circle cx=\"70\" cy=\"70\" r=\"70\"></circle>\r\n            </svg>\r\n        </div>\r\n    }\r\n    if(error.show) {\r\n        return <div className=\"error\">\r\n            <h2>{error.msg}</h2>\r\n            <Link to=\"/\" className=\"btn\">\r\n                back home\r\n            </Link>\r\n        </div>\r\n    }\r\n    const {Poster: poster, Title: title, Plot: plot, Year: year } = movie;\r\n    return (\r\n        <div className=\"movie-center\">\r\n            <Toggle />\r\n            <div className=\"singlemovie\">\r\n            <img src={poster}>\r\n\r\n            </img>\r\n            <div className=\"movie-info\">\r\n            <h2>{title}</h2>\r\n        <p>{plot}</p>\r\n        <h4>{year}</h4>\r\n        <Link to='/' className='btn'>\r\n          back to movies\r\n        </Link>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Search.js",[],"C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Movies.js",["54"],"import React from 'react'\r\nimport {useGlobalcontext} from './context'\r\nimport { Link } from 'react-router-dom'\r\nconst url = 'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png'\r\n\r\n  \r\n\r\nfunction Movies() {\r\n    const {movies, loading} = useGlobalcontext()\r\n\r\n    if(loading) {\r\n        return <div className=\"loading\">\r\n             <svg>\r\n                <circle cx=\"70\" cy=\"70\" r=\"70\"></circle>\r\n            </svg>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"movies\">\r\n            {\r\n                movies.map(movie => {\r\n                    const {imdbID: id, Poster: poster, Title: title, Year: year} = movie\r\n                    return(\r\n                        <Link to={`/movies/${id}`} key={id} className=\"movie\">\r\n                            <div className=\"center\">\r\n                               <img src={poster === 'N/A'? url:poster}></img>\r\n                               <div className=\"movie-info\">\r\n                                   <h4 className=\"title\">{title}</h4>\r\n                                   <p>{year}</p>\r\n                               </div>\r\n                            </div>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","C:\\Users\\gokul\\Desktop\\reactpro\\movie\\movie-app\\src\\Toogle.js",["55"],"import React,{useState, useEffect} from 'react'\r\nconst getStorageTheme = () => {\r\n    let theme = 'light-theme';\r\n    if (localStorage.getItem('theme')) {\r\n      theme = localStorage.getItem('theme');\r\n    }\r\n    return theme;\r\n  };\r\n\r\nfunction Toogle() {\r\n    const [theme, setTheme] = useState(getStorageTheme());\r\n\r\n\r\n    const toggleTheme = () => {\r\n      if(theme === 'light-theme') {\r\n        setTheme('dark-theme')\r\n      } else {\r\n        setTheme('light-theme')\r\n      }\r\n    }\r\n    useEffect(()=> {\r\n        document.documentElement.className = theme\r\n          localStorage.setItem('theme', theme)\r\n      },[theme])\r\n    return (\r\n        \r\n            <button className=\"toggle\" onClick={toggleTheme}>{theme=='light-theme'?'dark':'light'}</button>\r\n      \r\n    )\r\n}\r\n\r\nexport default Toogle\r\n",["56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"67","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":28,"column":13,"nodeType":"70","endLine":28,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":27,"column":32,"nodeType":"70","endLine":27,"endColumn":72},{"ruleId":"71","severity":1,"message":"72","line":27,"column":68,"nodeType":"73","messageId":"74","endLine":27,"endColumn":70},{"ruleId":"58","replacedBy":"75"},{"ruleId":"60","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["77"],["78"],"no-global-assign","no-unsafe-negation"]